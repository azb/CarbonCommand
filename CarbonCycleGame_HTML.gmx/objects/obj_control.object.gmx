<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ninja_pos = 1
absorbed = 0
global.temperature = 0
global.carbon = 0

scr_init_mouse_zones()

flash_a = .5
flash_dir = .1

draw_set_font(fnt_default)

//CARBON CASH
global.cash = 0

//C02 LEVELS
global.carbon = 0

level = 0

scr_start_stage()
by_init = by_start
tab = 0

started = 0
gameover = -1
//carbon_left = 0
alarm[0] = -1

answer = -1
//correct_answer = 2

questions = 0

question[0] = "What causes global warming?"
current_question = irandom(9)
answers = 4

scr_add_question("Which of these is not a Greenhouse gas?",
    "Carbon dioxide (CO2)",
    "Methane (CH4)",
    "Oxygen (O2)",
    "Nitrous Oxide",
    3)
scr_add_question("Sea levels are rising because",
    "Melting of sea ice",
    "Increases in rainfall",
    "Glaciers are melting",
    "All of the above",
    3)
scr_add_question("Today's current concentration of atmospheric carbon dioxide (CO2) is around",
    "100 ppm",
    "400 ppm",
    "1000 ppm",
    "5000 ppm",
    2)
scr_add_question("In the atmosphere, Carbon Dioxide is invisible",
    "True",
    "False",
    "",
    "",
    1)
scr_add_question("If carbon dioxide levels go up, the temperature of the atmosphere",
    "goes up",
    "goes down",
    "is not affected",
    "goes up and then goes down",
    1)
scr_add_question("The ozone hole causes extra heat that warms the planet and causes global warming",
    "True",
    "False",
    "",
    "",
    2)
scr_add_question("Driving a fossil fuel powered car causes emissions of carbon dioxide into the atmosphere that warm the planet",
    "True",
    "False",
    "",
    "",
    1)
scr_add_question("Which of the following is not an effect of global warming?",
    "melting ice",
    "rising sea levels",
    "volcanic eruptions",
    "changes in weather patterns",
    3)
scr_add_question("What is a fossil fuel?",
    "Coal",
    "Oil",
    "Natural Gas",
    "All of the above",
    4)
scr_add_question("What happens when we burn fossil fuels?",
    "Nothing",
    "We release carbon dioxide into the atmosphere",
    "A large fire",
    "The Earth becomes colder",
    2)

/*
answer_text[0] = "CO2"
answer_text[1] = "Trees"
answer_text[2] = "Blankets"
answer_text[3] = "Laughing"


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//used for no click transitions
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE C02
if !gameover
if carbon_left &gt; 0
    {
    alarm[0] = 20
    instance_create(random(room_width-200)+100 , -8 , obj_carbon)
    carbon_left--
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_escape)
game_end()

if flash_a &gt; .9 flash_dir = -.1
if flash_a &lt; .2 flash_dir = .1
flash_a += flash_dir

if room = rm_land
{
//SEA LEVEL RISE
if background_y[2] &lt; actual_back_y // = adjust(background_y[2] , actual_back_y)
background_y[2] += .5
if background_y[2] &gt; actual_back_y // = adjust(background_y[2] , actual_back_y)
background_y[2] -= .5
}

actual_back_y = by_init - global.carbon // 10 * 5
if actual_back_y &lt; by_init - 250
actual_back_y = by_init - 250

//if background_y[2] &lt; by_init - 500
//background_y[2] = by_init - 500
/*
if keyboard_check_pressed(vk_left) {
    with obj_tree
    {
        if instance_nearest(0,room_height*3/4,obj_tree) = id
            if cfire
                {
                cfire = 0
                alarm[0] = 10
                effect_create_above(ef_spark,x,y - 64,1,c_lime)
                nb = instance_create(x,y - 64,obj_bullet)
                nb.direction = point_direction(nb.x,nb.y,mouse_x,mouse_y)
                nb.image_angle = nb.direction
                nb.speed = 5
                nb.tx = mouse_x
                nb.ty = mouse_y
                ammo--
                }
    }
}

if keyboard_check_pressed(vk_up) {
    with obj_tree 
    {
        if instance_nearest(room_width/2,room_height*3/4,obj_tree) = id
            if cfire
                {
                cfire = 0
                alarm[0] = 10
                effect_create_above(ef_spark,x,y - 64,1,c_lime)
                nb = instance_create(x,y - 64,obj_bullet)
                nb.direction = point_direction(nb.x,nb.y,mouse_x,mouse_y)
                nb.image_angle = nb.direction
                nb.speed = 5
                nb.tx = mouse_x
                nb.ty = mouse_y
                ammo--
                }
    }
}
if keyboard_check_pressed(vk_right) {
    with obj_tree 
    {
        if instance_nearest(room_width,room_height*3/4,obj_tree) = id
            if cfire
                {
                cfire = 0
                alarm[0] = 10
                effect_create_above(ef_spark,x,y - 64,1,c_lime)
                nb = instance_create(x,y - 64,obj_bullet)
                nb.direction = point_direction(nb.x,nb.y,mouse_x,mouse_y)
                nb.image_angle = nb.direction
                nb.speed = 5
                nb.tx = mouse_x
                nb.ty = mouse_y
                ammo--
                }
    }
}

if keyboard_check_pressed(ord('A')) {
    if current_question &lt; 9
    current_question++
}
if keyboard_check_pressed(ord('D')) {
    if current_question &gt; 0
    current_question--   
}

if keyboard_check_pressed(ord('A')) {
    with obj_CO_level_gauge {
        if CO_level &gt;= 10
            CO_level -= 10
    }
}
if keyboard_check_pressed(ord('D')) {
    with obj_CO_level_gauge {
        if CO_level &lt;= 290
            CO_level += 10
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if scr_in_mouse_zone()
//draw_rectangle(0,0,128,128,0)
scr_init_mouse_zones()
draw_sprite(spr_green_ninja,0,room_width,room_height + 639* ninja_pos)
if gameover = -1
    {
    ninja_pos = adjust(ninja_pos , 0)
    draw_sprite(spr_message_large,0,room_width/2,room_height + 64)
    draw_set_halign(fa_left)
    draw_set_valign(fa_top)
    draw_set_color(c_black)
    draw_set_font(fnt_message)
    tstr = "Today's industry for energy is large, and includes coal fired power plants,"
        +" gasoline powered vehicles and energy for homes and buildings. "+
        "All this energy production is generating a lot of climate changing C02. Can I count "+
        "on you to clean it up and save our planet?"
    //draw_text(room_width/2 - 480,room_height - 210,"Green Ninja: "+tstr)
    scr_paragraph("Green Ninja: "+tstr , room_width/2 - 480,room_height - 210 , 880 , c_black)
    
    if button(spr_button,room_width/2-160,room_height - 64, 320,48,'Start Game',-1,0,'')
        {
        gameover = 0
        alarm[0] = 1
        }
    }
else
    {
    draw_set_font(fnt_default)
    draw_set_halign(fa_right)
    draw_set_valign(fa_center)
    
    //Carbon Cash
    
    draw_sprite(spr_carbon_cash_bar,0,0,0)
    draw_text(240,50,'$ '+string(global.cash))
    
    //Score
    
    draw_sprite(spr_score_bar,0,350,0)
    draw_text(350+240,50,string(score))
    
    //Thermometer
    
    draw_sprite(spr_thermometer , 0 ,0,80)
    draw_set_color(c_white)
    //draw_rectangle(62,180 - global.temperature / 20 * 130 ,70,180,0)
    
    ypos= 279 - global.temperature / 20 * 182
    if ypos &lt; 97
        ypos = 97
    draw_rectangle(37,97,60,ypos,0)
    
    //Carbon Bar
    
    //draw_sprite(spr_carbon_bar,0,room_width - 100 , 0)
    
    //Show mouse position coordinates
    //draw_set_halign(fa_left)draw_set_valign(fa_right)draw_text(mouse_x+32,mouse_y+32,string(mouse_x)+","+string(mouse_y))
    
    // - global.temperature / 20 * 130
    
    //if actual_back_y &lt; by_init - 250
    
    if tab = 1 || tab = 2
        ninja_pos = adjust(ninja_pos , 0)
    else
        ninja_pos = adjust(ninja_pos , 1)
    
    if actual_back_y &lt;= by_init - 200 //global.temperature &gt; 20 //LOSE
        {
        gameover = 1
        draw_set_color(c_black)
        draw_set_halign(fa_center)
        draw_set_valign(fa_center)    
        draw_set_font(fnt_large)
        draw_sprite(spr_message_large,0,room_width/2 , room_height/2)
        if score &gt;= global.high_score
            {
            global.high_score = score
            tstr = "Oh noes! Earth got flooded!##Final Score: "+string(score)+"#New High Score!"
            }
        else
            {
            tstr = "Oh noes! Earth got flooded!##Final Score: "+string(score)+"#High Score: "+string(high_score)
            }
        draw_text(room_width/2 , room_height/2 - 96 , tstr)
        draw_set_font(fnt_default)
        if button(spr_button,room_width/2-160,room_height/2 + 128, 320,48,'Play Again',-1,0,'')
            {
            //global.temperature = 0
            //global.carbon = 0
            //scr_start_stage()
            room_restart()
            score = 0
            }
        }
    else
        {
        if instance_number(obj_carbon) = 0 &amp;&amp; carbon_left = 0 //WIN
            {
            //draw_set_alpha(.4)
            //draw_set_color(c_black)
            //draw_rectangle(0,0,room_width,room_height,0)
            draw_set_alpha(1)
            if tab = 0 //GAME OVER SHOW SCORE TAB
                {
                if random(10) &gt; 9
                    {
                    effect_create_above(ef_firework,random(room_width),random(room_height),irandom(2),choose(c_lime,c_yellow,c_blue,c_red,c_purple,c_aqua))
                    }
                gameover = 2
                draw_set_font(fnt_large)
                draw_set_color(c_black)
                draw_set_halign(fa_center)
                draw_set_valign(fa_center)    
                draw_sprite(spr_message_large,0,room_width/2,room_height/2)
                draw_text_outlined(room_width/2 , room_height/2 - 100 , "Level " + string(level + 1) +" Completed!", c_white,c_black)
                draw_set_font(fnt_default)
                //carbon_start - global.temperature
                draw_text_outlined(room_width/2 , room_height/2 + 96 - 50 , "CO2 Absorbed: "+string(absorbed)+'/'+string(carbon_start)
                    +"#Carbon Cash: $"+string(global.cash), c_white,c_black)
                    /*
                if button(spr_button,room_width/2 - 160 - 160,room_height/2 + 168 - 20, 320,48,'Try Again',-1,0,'')
                    {
                    scr_start_stage()
                    with obj_tree
                    ammo = ammo_max
                    }*/
                /*
                if button(spr_button,room_width/2 - 160 ,room_height/2 + 128, 320,48,'Upgrades',-1,0,'')
                    {
                    
                    }
                */
                if button(spr_button,room_width/2 - 160,room_height/2 + 168 - 20, 320,48,'Continue',-1,0,'')
                    {
                    tab = 1
                    instance_activate_object(obj_tree)
                    with obj_tree
                    ammo = ammo_max
                    alarm[1] = 10
                    }
                }
            if tab = 1 //SHOW QUIZ QUESTION TAB
                {
                draw_set_halign(fa_left)
                draw_set_valign(fa_top) 
                draw_set_font(fnt_message)
                draw_sprite(spr_message_large,0,room_width/2,room_height/2)
                draw_set_color(c_black)
                
                draw_text(room_width/2 - 440 , room_height/2 - 240, "Answer this question correctly to get $100 more Carbon Cash!") //, c_black,c_white)
                //"Answer this question correctly to get $100 more Carbon Cash!##"+
                tstr = question[current_question]
                scr_paragraph(tstr,room_width/2 - 440 , room_height/2 - 220 + 50, 800, c_black)
                if answer &gt; -1
                if button(spr_button,room_width/2 - 160,room_height / 2 + 220, 320,48,'Submit',-1,0,'')
                    {
                    tab = 2
                    if answer = correct_answer[current_question]
                        {
                        global.cash += 100
                        }
                    exit
                    }
                draw_set_halign(fa_left)
                draw_set_valign(fa_center)
                if alarm[1] &lt; 0
                for(i=0 ; i &lt; answers; i++)
                    {
                    //spr_radio
                    if answer_text[current_question,i] &gt; ""
                    if button_tab(spr_button_tab,room_width/2 - 420,room_height / 2 - 64 - 40 + 64 * i + 50,840,48,answer_text[current_question,i],-1,0,'',answer,i)
                        answer = i
                    //draw_text(room_width/2 - 420 + 128,room_height / 2 - 64 - 40 + 64 * i + 24 + 50, answer_text[i]) //, c_black,c_white)
                    }
                
                }
            if tab = 2 //SHOW IF ANSWER IS CORRECT TAB
                {
                draw_sprite(spr_message_large,0,room_width/2,room_height/2)
                draw_set_halign(fa_center)
                draw_set_valign(fa_center)
                draw_set_font(fnt_message)  
                draw_set_color(c_black)
                if answer = correct_answer[current_question]
                    {
                    draw_text(room_width/2  , room_height/2 , 'Your answer "'+string_lower(answer_text[current_question,answer])+'" is correct!#Congratulations! You made $100 Carbon Cash!') //, c_black,c_lime)
                    }
                else
                    {
                    draw_text(room_width/2 , room_height/2 , 'Your answer "'+string_lower(answer_text[current_question,answer])+'" is incorrect.#:( Better luck next time!') //, c_black,c_red)
                
                    }
                if button(spr_button,room_width/2 - 160,room_height / 2 + 220, 320,48,'Continue',-1,0,'')
                    {
                    tab = 3
                    current_question++
                    if current_question &gt;= 10
                    current_question = 0
                    }
                }
            if tab = 3 //UPGRADES TAB
                {
                with obj_tree
                ammo = ammo_max
                draw_sprite(spr_message,0,room_width/2 , room_height/2 - 500)
                draw_set_halign(fa_center)
                draw_set_valign(fa_center)
                draw_text_outlined(room_width/2 , room_height/2 - 430 , "Purchase Upgrades##Select an item to upgrade.", c_white,c_black)
                if button(spr_button,room_width - 480,room_height - 96, 320,48,'Start Next Level',-1,0,'')
                    {
                    tab = 0
                    scr_start_stage()
                    level++
                    with (obj_tree)
                        {
                        ammo = ammo_max
                        }
                    }
                }
            }
        else
            {
            draw_set_halign(fa_left)
            draw_set_valign(fa_top)
            draw_set_color(c_red)
            draw_set_font(font1)
            //draw_text(20,background_y[2] + 800 - 20 - 255,"Sea Level")
            //draw_line(0 , background_y[2] + 800 - 255, room_width, background_y[2] + 800 - 255)
            
            //draw_sprite(spr_ice,0,-global.temperature / 10 * 256,room_height - 256)
            // draw_sprite_ext(spr_ice,0,room_width + global.temperature / 10 * 256,room_height - 256,-1,1,0,c_white,1)
            
            //draw_text(100,50,"Score: "+string(score))
            //draw_text(100,80,"Carbon Cash: $"+string(global.cash))
            
            //global.temperature = global.carbon / 20 //instance_number(obj_carbon) / 10
             //top = 50
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if global.temperature &lt; 10
global.temperature += .1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if global.temperature &gt; 0
global.temperature -= .1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
